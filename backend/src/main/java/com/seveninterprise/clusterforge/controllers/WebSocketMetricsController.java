package com.seveninterprise.clusterforge.controllers;

import com.seveninterprise.clusterforge.services.MetricsWebSocketService;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;

/**
 * Controller WebSocket para gerenciar conex√µes e solicita√ß√µes de m√©tricas
 */
@Controller
public class WebSocketMetricsController {
    
    private final MetricsWebSocketService metricsWebSocketService;
    
    public WebSocketMetricsController(MetricsWebSocketService metricsWebSocketService) {
        this.metricsWebSocketService = metricsWebSocketService;
    }
    
    /**
     * Endpoint para solicitar m√©tricas atualizadas
     * Cliente pode enviar uma mensagem para este endpoint para solicitar atualiza√ß√£o imediata
     */
    @MessageMapping("/request-metrics")
    public void requestMetrics(Authentication authentication) {
        System.out.println("üì• Solicita√ß√£o de m√©tricas recebida");
        if (authentication != null && authentication.isAuthenticated()) {
            String username = authentication.getName();
            System.out.println("üë§ Usu√°rio solicitando m√©tricas: " + username);
            metricsWebSocketService.sendMetricsToUser(username);
        } else {
            System.out.println("‚ö†Ô∏è Usu√°rio n√£o autenticado - enviando broadcast geral");
            metricsWebSocketService.broadcastMetrics();
        }
    }
}

